@page
@using Extensions
@model TasteRestaurant.Pages.MenuItems.EditModel
@{
    ViewData["Title"] = "Edit";
}

<br />
<h2>Edit Menu Item</h2>
<hr />

<form method="post" enctype="multipart/form-data">
    <div class="form-border row">
        <div asp-validation-summary="ModelOnly" class="text-danger"></div>
        <input type="hidden" asp-for="MenuItemVM.MenuItem.Id" />
        <div class="col-sm-8">
            <div class="form-group row">
                <div class="col-sm-4">
                    <label asp-for="MenuItemVM.MenuItem.Name" class="custom-label"></label>
                </div>
                <div class="col-sm-8">
                    <input asp-for="MenuItemVM.MenuItem.Name" class="form-control" />
                </div>
                <span asp-validation-for="MenuItemVM.MenuItem.Name" class="text-danger"></span>
            </div>
            <div class="form-group row">
                <div class="col-sm-4">
                    <label asp-for="MenuItemVM.MenuItem.Description" class="custom-label"></label>
                </div>
                <div class="col-sm-8">
                    <textarea style="height: 150px;" asp-for="MenuItemVM.MenuItem.Description" class="form-control"></textarea>
                </div>
                <span asp-validation-for="MenuItemVM.MenuItem.Description" class="text-danger"></span>
            </div>
            <div class="form-group row">
                <div class="col-sm-4">
                    <label asp-for="MenuItemVM.MenuItem.Price" class="custom-label"></label>
                </div>
                <div class="col-sm-8">
                    <input asp-for="MenuItemVM.MenuItem.Price" class="form-control" />
                </div>
                <span asp-validation-for="MenuItemVM.MenuItem.Price" class="text-danger"></span>
            </div>
            <div class="form-group row">
                <div class="col-sm-4">
                    <label asp-for="MenuItemVM.MenuItem.Image" class="custom-label"></label>
                </div>
                <div class="col-sm-8">
                    <input type="file" name="files" multiple class="form-control" />
                </div>
            </div>
            <div class="form-group row">
                <div class="col-sm-4">
                    <label asp-for="MenuItemVM.MenuItem.Spicyness" class="custom-label"></label>
                </div>
                <div class="col-sm-8">
                    <select asp-for="MenuItemVM.MenuItem.Spicyness" asp-items="Html.GetEnumSelectList<MenuItem.Espicy>()" class="form-control"></select>
                </div>
            </div>
            <div class="form-group row">
                <div class="col-sm-4">
                    <label asp-for="MenuItemVM.MenuItem.CategoryId" class="custom-label"></label>
                </div>
                <div class="col-sm-8">
                    <select asp-for="MenuItemVM.MenuItem.CategoryId" asp-items="Model.MenuItemVM.CategoryTypes.ToSelectListItem(Model.MenuItemVM.MenuItem.CategoryId)" class="form-control"></select>
                </div>
            </div>
            <div class="form-group row">
                <div class="col-sm-4">
                    <label asp-for="MenuItemVM.MenuItem.FoodTypeId" class="custom-label"></label>
                </div>
                <div class="col-sm-8">
                    <select asp-for="MenuItemVM.MenuItem.FoodTypeId" asp-items="Model.MenuItemVM.FoodTypes.ToSelectListItem(Model.MenuItemVM.MenuItem.FoodTypeId)" class="form-control"></select>
                </div>
            </div>
        </div>
        <div class="col-sm-3 col-sm-offset-1">
            <img src="@Model.MenuItemVM.MenuItem.Image" width="100%" style="border-radius: 5px; border: 1px solid #bbb9b9" />
        </div>
        <br />
        <div class="form-group row col-sm-12">
            <input type="submit" class="btn btn-sm btn-primary" value="Update" />
            <a asp-page="Index" class="btn btn-sm btn-success">Back To List</a>
        </div>
    </div>
</form>

@section Scripts {
    @{ await Html.RenderPartialAsync("_ValidationScriptsPartial");}
    
    <script>

        $.validator.methods.range = function (value, element, param) {
            var globalizedValue = value.replace(",", ".");
            return this.optional(element) || (globalizedValue >= param[0] && globalizedValue <= param[1]);
        }

        $.validator.methods.number = function (value, element) {
            return this.optional(element) || /-?(?:\d+|\d{1,3}(?:[\s\.,]\d{3})+)(?:[\.,]\d+)?$/.test(value);
        }
        //Date dd/MM/yyyy
        $.validator.methods.date = function (value, element) {
            var date = value.split("/");
            return this.optional(element) || !/Invalid|NaN/.test(new Date(date[2], date[1], date[0]).toString());
        }
    </script>
}

